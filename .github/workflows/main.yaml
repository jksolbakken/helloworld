name: Build main
on:
  push:
    branches:
      - main
    paths-ignore:
      - "*.md"
  workflow_dispatch:

jobs:
  set-version:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - name: set version
        id: set-version
        run: |
          echo Faking a Semantic Version
          echo "version=1.$(date "+%Y%m%d%H%M%S")" >> ${GITHUB_OUTPUT}

  build:
    name: Build and push
    needs:
      - set-version
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      BUILDER_IMG: "chainguard/go"
      RUNNER_IMG: "chainguard/static"
      IMG_IDENTITY: "https://github.com/chainguard-images/images/.github/workflows/release.yaml@refs/heads/main"
      IMG_ISSUER: "https://token.actions.githubusercontent.com"
    outputs:
      tag: "${{ steps.docker-build-push.outputs.IMAGE }}"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install cosign
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a # ratchet:sigstore/cosign-installer@v3
        with:
          cosign-release: 'v2.5.0'
      - name: Verify images
        run: |
          cosign verify --certificate-identity ${{ env.IMG_IDENTITY }} --certificate-oidc-issuer ${{ env.IMG_ISSUER }} ${{ env.BUILDER_IMG }}
          cosign verify --certificate-identity ${{ env.IMG_IDENTITY }} --certificate-oidc-issuer ${{ env.IMG_ISSUER }} ${{ env.RUNNER_IMG }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # ratchet:docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # ratchet:docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
      - name: debug
        run: |
          "echo tag: ${{ needs.jobs.set-version.outputs.version }}"
          "echo tag: $TAG"
        env:
          TAG: ${{ needs.jobs.set-version.outputs.version }}
      
